<project name="Tests" default="build" basedir="." xmlns:jacoco="antlib:org.jacoco.ant">
	<description>
      		Build file for tests
    	</description>
 
        <!-- Read the test config property file --> 
        <loadproperties srcFile="${user.home}/octopus.test.properties"/>

	<property name="octopus.dist" location="../dist" />

	<property name="build.sysclasspath" value="ignore" />

	<propertyset id="test.sysproperties" negate="true"/>

	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath path="lib/jacocoant.jar" />
	</taskdef>

	<path id="default.classpath">
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
		<fileset dir="dist">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${octopus.dist}">
			<include name="*.jar" />
		</fileset>
		<pathelement location="." />
		<pathelement location="${octopus.dist}" />
	</path>

	<target name="compile" description="compile the source ">
		<mkdir dir="build/classes" />
		<mkdir dir="dist" />

		<!-- Compile the java code from ${src} into ${classes} -->
		<javac srcdir="src" destdir="build/classes" debug="on">
			<classpath refid="default.classpath" />
		</javac>

		<!-- Put everything in ${classes} into the jar file -->
		<jar jarfile="dist/octopus-tests.jar" basedir="build/classes" />
	</target>

	<target name="build" description="build everything" depends="clean,compile" />

	<target name="prepare-test" description="Prepare for unit tests" depends="build">

		<fail>
			<condition>
       			<not>
         			<isset property="test.ssh.location"/>
       			</not>
     			</condition>
   		</fail>

                <!-- Prepare a local dir with symlinks for testing -->
		<exec dir="${basedir}" executable="/bin/bash" os="Linux">
 			<arg line="${basedir}/scripts/create_symlinks"/>
		</exec>

		<exec dir="${basedir}" executable="/bin/bash" os="OSX">
 			<arg line="${basedir}/scripts/create_symlinks"/>
		</exec>
		
		<sshexec host="${test.ssh.location}"
			username="${test.ssh.user}"
			password="${test.ssh.password}"
			command="/bin/bash"
			input="${basedir}/scripts/create_symlinks"/>
	</target>

	<target name="test" description="Run unit tests with coverage" depends="build,prepare-test">
		<delete file="reports/jacoco/jacoco.exec" />
	        <mkdir dir="reports/jacoco" />

		<jacoco:coverage destfile="reports/jacoco/jacoco.exec">
			<junit printsummary="yes" fork="yes">
				<classpath refid="default.classpath" />
				<syspropertyset refid="test.sysproperties"/>

				<batchtest todir="reports">
					<formatter type="xml" />
					<formatter type="plain" />
					<fileset dir="src">
						<include name="**/Test*.java" />
						<include name="**/*Test.java" />
						<include name="**/*TestCase.java" />
						<exclude name="**/integration/*.java" />
					</fileset>
				</batchtest>
			</junit>
		</jacoco:coverage>

        <jacoco:report>
            <executiondata>
                <file file="reports/jacoco/jacoco.exec" />
            </executiondata>

            <structure name="octopus">
                <sourcefiles>
                    <fileset dir="../src" />
                </sourcefiles>
                <classfiles>
                    <fileset dir="../build/classes" />
                </classfiles>
            </structure>

            <html destdir="reports/jacoco" />
            <xml destfile="reports/jacoco/coverage.xml" />
        </jacoco:report>
	</target>

	<target name="test-integration" description="run integration tests" depends="build">
		<mkdir dir="it-reports" />
		<junit printsummary="yes" fork="yes">
			<classpath refid="default.classpath" />
			<syspropertyset refid="test.sysproperties"/>

			<batchtest fork="yes" todir="it-reports">
				<formatter type="xml" />
				<formatter type="plain" />
				<fileset dir="src">
					<include name="**/IT*.java" />
					<include name="**/*IT.java" />
					<include name="**/*ITCase.java" />
					<include name="**/integration/*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="clean" description="clean up">
		<delete dir="build" />
		<delete dir="dist" />
		<delete dir="reports" />
		<delete dir="it-reports" />
	</target>
</project>
